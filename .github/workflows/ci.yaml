name: 'Continous Integration Workflow'
on:
    pull_request: 
        branches: 
            - main
        paths:
            - 'src/**'
    push:
        branches: 
            - main
        paths:
            - 'src/**'
    workflow_dispatch: 
jobs:
    test:
        name: 'Run Unit tests'
        runs-on: ubuntu-latest
        steps:
            #----------------------------------------------
            #       check-out repo and set-up python
            #----------------------------------------------
            - name: 'Check out repository'
              uses: actions/checkout@v4

            - name: 'Set up python'
              id: setup-python
              uses: actions/setup-python@v5
              with:
                python-version: '3.9'

            - name: 'Install Poetry'
              uses: snok/install-poetry@v1
              with:
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true
        
            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            - name: 'Load cached venv'
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            - name: 'Install dependencies'
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: |
                rm poetry.lock
                poetry install --no-interaction --no-root
            
            #----------------------------------------------
            #              run test suite
            #----------------------------------------------
            - name: 'Run tests'
              run: |
                    source .venv/bin/activate
                    pytest src/tests/
                    # coverage report